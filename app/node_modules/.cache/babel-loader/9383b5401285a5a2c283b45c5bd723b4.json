{"ast":null,"code":"var _jsxFileName = \"/app/public/src/Network.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Homepage from './Homepage';\nimport RenderGraph from './RenderGraph';\nimport \"./graph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Network = () => {\n  _s();\n\n  // States\n  const [numDeployments, setnumDeployments] = useState(-1);\n  const [currIdx, setCurrIdx] = useState(-1);\n  const [deployment, setDeployment] = useState(null);\n\n  const summary = async () => {\n    return await fetch(`https://serverhackathon.prakshal.repl.co/summary`, {\n      mode: 'no-cors',\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(response => setnumDeployments(response[\"count\"])).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(async () => {\n    await summary();\n  }, []);\n\n  const postCommand = async deployment_index => {\n    return await fetch(`deployment?number=${deployment_index}`).then(response => response.json()).then(response => {\n      setDeployment(response);\n      setCurrIdx(deployment_index);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  if (deployment === null) {\n    return /*#__PURE__*/_jsxDEV(Homepage, {\n      setnumDeployments: setnumDeployments,\n      postCommand: postCommand,\n      numDeployments: numDeployments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RenderGraph, {\n    initialNodes: deployment.nodes,\n    initialEdges: deployment.edges,\n    setDeployment: setDeployment,\n    currIdx: currIdx,\n    setCurrIdx: setCurrIdx\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Network, \"PWN3dfDVfdO7SremiNVmtAhCJxQ=\");\n\n_c = Network;\nexport default Network;\n\nvar _c;\n\n$RefreshReg$(_c, \"Network\");","map":{"version":3,"sources":["/app/public/src/Network.js"],"names":["React","useState","useEffect","Homepage","RenderGraph","Network","numDeployments","setnumDeployments","currIdx","setCurrIdx","deployment","setDeployment","summary","fetch","mode","headers","then","response","json","catch","error","console","log","postCommand","deployment_index","nodes","edges"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,aAAP;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,CAAC,CAAF,CAApD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAC,CAAF,CAAtC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMW,OAAO,GAAG,YAAY;AAC1B,WAAO,MAAMC,KAAK,CACd,kDADc,EAEhB;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,OAAO,EAAE;AACL,uCAA+B,GAD1B;AAEL,wBAAgB;AAFX;AAFX,KAFgB,CAAL,CAUVC,IAVU,CAULC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVP,EAWVF,IAXU,CAWJC,QAAD,IAAcV,iBAAiB,CAACU,QAAQ,CAAC,OAAD,CAAT,CAX1B,EAYVE,KAZU,CAYHC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAdU,CAAb;AAeD,GAhBD;;AAkBAlB,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMU,OAAO,EAAb;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,WAAW,GAAG,MAAOC,gBAAP,IAA4B;AAC9C,WAAO,MAAMX,KAAK,CACd,qBAAoBW,gBAAiB,EADvB,CAAL,CAGVR,IAHU,CAGLC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHP,EAIVF,IAJU,CAIJC,QAAD,IAAc;AAAEN,MAAAA,aAAa,CAACM,QAAD,CAAb;AAAyBR,MAAAA,UAAU,CAACe,gBAAD,CAAV;AAA8B,KAJlE,EAKVL,KALU,CAKHC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPU,CAAb;AAQD,GATD;;AAWA,MAAIV,UAAU,KAAK,IAAnB,EAAyB;AACvB,wBAAO,QAAC,QAAD;AAAU,MAAA,iBAAiB,EAAEH,iBAA7B;AAAgD,MAAA,WAAW,EAAEgB,WAA7D;AAA0E,MAAA,cAAc,EAAEjB;AAA1F;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,WAAD;AAAa,IAAA,YAAY,EAAEI,UAAU,CAACe,KAAtC;AAA6C,IAAA,YAAY,EAAEf,UAAU,CAACgB,KAAtE;AAA6E,IAAA,aAAa,EAAEf,aAA5F;AAA2G,IAAA,OAAO,EAAEH,OAApH;AAA6H,IAAA,UAAU,EAAEC;AAAzI;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA9CD;;GAAMJ,O;;KAAAA,O;AAgDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Homepage from './Homepage'\nimport RenderGraph from './RenderGraph'\nimport \"./graph.css\"\n\n\nconst Network = () => {\n  // States\n  const [numDeployments, setnumDeployments] = useState(-1);\n  const [currIdx, setCurrIdx] = useState(-1);\n  const [deployment, setDeployment] = useState(null);\n\n  const summary = async () => {\n    return await fetch(\n      (`https://serverhackathon.prakshal.repl.co/summary`),\n      {\n        mode: 'no-cors',\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            'Content-Type': 'application/json',\n        }\n      }\n    )\n      .then(response => response.json())\n      .then((response) => setnumDeployments(response[\"count\"]))\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  useEffect(async () => {\n    await summary()\n  }, []);\n\n  const postCommand = async (deployment_index) => {\n    return await fetch(\n      (`deployment?number=${deployment_index}`)\n    )\n      .then(response => response.json())\n      .then((response) => { setDeployment(response); setCurrIdx(deployment_index) })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  if (deployment === null) {\n    return <Homepage setnumDeployments={setnumDeployments} postCommand={postCommand} numDeployments={numDeployments} />;\n  }\n\n  return (\n    <RenderGraph initialNodes={deployment.nodes} initialEdges={deployment.edges} setDeployment={setDeployment} currIdx={currIdx} setCurrIdx={setCurrIdx} />\n  );\n};\n\nexport default Network;\n"]},"metadata":{},"sourceType":"module"}